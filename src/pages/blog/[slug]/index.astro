---
import '../style.css';
import Layout from "../../../layouts/Layout.astro";
import type { Post } from '../../../types/blog';
import { getFullFormattedDate } from '../../../util/date';
import { getAllPosts, getPostBySlug } from '../../../data-fetching/posts.fetch';
import PortableText from '../../../components/PortableText.astro';
import { getSanityHeadings } from '../../../util/sanity';
import Aside from '../../../components/Aside.svelte';

export async function getStaticPaths() {

    const posts = await getAllPosts();

    return posts.map(p => {
        return {
            params: { slug: p.slug },
            props: { post: p }
        }
    });
}

const post: Post = Astro.props.post;

const p: Post = await getPostBySlug(post.slug);

// console.log(p.headings[0].children);
// console.log(p.headings);
// console.log(getSanityHeadings(p.headings));

---

<script>
    import { generateHeadingSlug } from "../../../util/sanity"

    // generates an id slug matching the table of contents slugs
    document.querySelectorAll('article :is(h1, h2, h3, h4, h5, h6)').forEach((ele: Element) => {
        const text = ele.firstChild?.nodeValue;

        if (!text) return;

        const slug = generateHeadingSlug(text);
        ele.id = slug;
    })
</script>

<Layout title={p.title} type="blog" description={p.excerpt} imageUrl={p.thumbnail}>
    <main id="main">

        <div id="blog-content">
            <section id="info">
                <h1 id="article-title">{p.title}</h1>
                <div>
                    <p>Written by <strong>{p.author.name}</strong></p>
                    <p>{getFullFormattedDate(p.createdAt)}</p>
                </div>
            </section>
            
            <article>
                <PortableText portableText={p.body} />
            </article>
        </div>

        <Aside headings={getSanityHeadings(p.headings)} title={p.title} client:load />
    </main>
</Layout>


<style>
    main {
        display: flex;
        gap: 1em;
        margin: 0 auto;        
        max-width: 1200px;
        height: 100%;
    }
     

    #blog-content {
        height: 100%;
        padding: 1em;
        display: grid;
        gap: .75rem;
        flex: 1;
    }

    section {
        border-bottom: 1px solid var(--clr-border);
        padding-bottom: 1em;
        display: grid;
        gap: 1em;
    }

    article {
        height: 100%;
        display: grid;
        gap: 1rem;
    }

    pre {
        overflow: scroll;
    }

    img {
        max-height: 100px;
    }
</style>